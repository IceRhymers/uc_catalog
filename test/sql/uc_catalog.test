# name: test/sql/uc_catalog.test
# description: test uc_catalog extension
# group: [uc_catalog]

# Require statement will ensure this test is run with this extension loaded
require parquet

require uc_catalog

require delta

require httpfs

# Set these to run the test
require-env UC_TOKEN

require-env UC_ENDPOINT

require-env UC_AWS_REGION

# Catalog Secret
statement ok
CREATE SECRET (
	TYPE UC,
	TOKEN '${UC_TOKEN}',
	ENDPOINT '${UC_ENDPOINT}',
	AWS_REGION '${UC_AWS_REGION}'
)

# attach the workspace catalog under uc1 alias
statement ok
ATTACH 'test_catalog' AS test_catalog (TYPE UC_CATALOG)

# Note that the "information_schema" schema is assumed to be internal atm so not shown here
query IIIIII
SHOW ALL TABLES;
----
test_catalog	test_schema	test_table	[a, b]	[INTEGER, VARCHAR]	false
test_catalog	test_schema	test_table2	[a, b]	[VARCHAR, INTEGER]	false
test_catalog	test_schema	test_table_ramesh	[x]	[INTEGER]	false
test_catalog	test_schema	test_table_tdas	[a, b]	[INTEGER, VARCHAR]	false

query II
select * from test_catalog.test_schema.test_table;
----
1	x

query II
select * from test_catalog.test_schema.test_table2;
----
x	1

# Note that there exist now 2 secrets: the UC secret and the temporary s3 credentials fetched from UC
query II rowsort
select name[:14], type from duckdb_secrets()
----
__default_uc	uc
__internal_uc_	s3
__internal_uc_	s3

# If we query a table again, the secret will be updated
query II
select * from test_catalog.test_schema.test_table;
----
1	x
